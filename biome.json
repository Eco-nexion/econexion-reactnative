{
    "$schema": "https://biomejs.dev/schemas/2.1.1/schema.json",
    "vcs": {
        "enabled": true,
        "clientKind": "git",
        "useIgnoreFile": true
    },
    "files": {
        "includes": [
            "**/*.js",
            "**/*.jsx",
            "**/*.ts",
            "**/*.tsx",
            "**/*.json",
            "**/*.css",
            "**/*.mjs",
            "**/*.cjs",
            "!**/node_modules",
            "!**/vite.config.{js,ts}",
            "!vite.config.ts"
        ]
    },
    "formatter": {
        "enabled": true,
        "formatWithErrors": false,
        "indentStyle": "space",
        "indentWidth": 4,
        "lineWidth": 120,
        "lineEnding": "lf"
    },
    "linter": {
        "enabled": true,
        "rules": {
            "recommended": true,
            "complexity": {
                "noExcessiveCognitiveComplexity": "info",
                "noExtraBooleanCast": "error",
                "noForEach": "off",

                "noUselessConstructor": "error",
                "noUselessEmptyExport": "error",
                "noUselessFragments": "error",
                "noUselessLabel": "error",
                "noUselessLoneBlockStatements": "error",
                "noUselessRename": "error",
                "noUselessSwitchCase": "error",
                "noUselessTernary": "error",
                "noUselessThisAlias": "error",
                "noUselessTypeConstraint": "error",
                "noVoid": "error",
                "useArrowFunction": "error",
                "useFlatMap": "error",
                "useLiteralKeys": "error",
                "useOptionalChain": "error",
                "useRegexLiterals": "error",
                "useSimpleNumberKeys": "error",
                "useSimplifiedLogicExpression": "error"
            },
            "correctness": {
                "noChildrenProp": "error",
                "noConstAssign": "error",
                "noConstantCondition": "error",
                "noEmptyCharacterClassInRegex": "error",
                "noEmptyPattern": "error",
                "noGlobalObjectCalls": "error",
                "noInnerDeclarations": "error",
                "noInvalidConstructorSuper": "error",
                "noNonoctalDecimalEscape": "error",
                "noPrecisionLoss": "error",
                "noSelfAssign": "error",
                "noSetterReturn": "error",
                "noSwitchDeclarations": "error",
                "noUndeclaredVariables": "error",
                "noUnreachable": "error",
                "noUnreachableSuper": "error",
                "noUnsafeFinally": "error",
                "noUnsafeOptionalChaining": "error",
                "noUnusedLabels": "error",
                "noUnusedPrivateClassMembers": "error",
                "noUnusedVariables": "error",
                "useIsNan": "error",
                "useValidForDirection": "error",
                "useYield": "error"
            },
            "security": {
                "noDangerouslySetInnerHtml": "error",
                "noDangerouslySetInnerHtmlWithChildren": "error",
                "noGlobalEval": "error"
            },
            "style": {
                "noDefaultExport": "off",
                "noImplicitBoolean": "off",
                "noInferrableTypes": "error",
                "noNamespace": "error",
                "noNegationElse": "error",
                "noNonNullAssertion": "warn",
                "noParameterProperties": "error",
                "noRestrictedGlobals": "error",
                "noShoutyConstants": "off",
                "noUnusedTemplateLiteral": "error",
                "noUselessElse": "error",
                "useBlockStatements": "error",
                "useCollapsedElseIf": "error",
                "useConst": "error",
                "useDefaultParameterLast": "error",
                "useEnumInitializers": "error",
                "useExponentiationOperator": "error",
                "useFragmentSyntax": "error",
                "useImportType": "error",
                "useLiteralEnumMembers": "error",
                "useNamingConvention": {
                    "level": "error",
                    "options": {
                        "strictCase": true,
                        "conventions": [
                            {
                                "selector": {
                                    "kind": "class"
                                },
                                "formats": ["PascalCase"]
                            },
                            {
                                "selector": {
                                    "kind": "interface"
                                },
                                "formats": ["PascalCase"]
                            },
                            {
                                "selector": {
                                    "kind": "typeAlias"
                                },
                                "formats": ["PascalCase"]
                            },
                            {
                                "selector": {
                                    "kind": "enum"
                                },
                                "formats": ["PascalCase"]
                            },
                            {
                                "selector": {
                                    "kind": "enumMember"
                                },
                                "formats": ["CONSTANT_CASE"]
                            },
                            {
                                "selector": {
                                    "kind": "variable"
                                },
                                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE", "snake_case"]
                            },
                            {
                                "selector": {
                                    "kind": "function"
                                },
                                "formats": ["camelCase", "PascalCase"]
                            },
                            {
                                "selector": {
                                    "kind": "functionParameter"
                                },
                                "formats": ["camelCase"]
                            },
                            {
                                "selector": {
                                    "kind": "objectLiteralMethod"
                                },
                                "formats": ["camelCase"]
                            },
                            {
                                "selector": {
                                    "kind": "objectLiteralProperty"
                                },
                                "formats": ["camelCase", "snake_case"]
                            },
                            {
                                "selector": {
                                    "kind": "typeParameter"
                                },
                                "formats": ["PascalCase"]
                            },
                            {
                                "selector": {
                                    "kind": "typeProperty"
                                },
                                "formats": ["camelCase", "snake_case"]
                            }
                        ]
                    }
                },
                "useNodejsImportProtocol": "error",
                "useNumberNamespace": "error",
                "useSelfClosingElements": "error",
                "useShorthandAssign": "error",
                "useSingleVarDeclarator": "error",
                "useTemplate": "error"
            },
            "suspicious": {
                "noArrayIndexKey": "error",
                "noAssignInExpressions": "error",
                "noAsyncPromiseExecutor": "error",
                "noCatchAssign": "error",
                "noClassAssign": "error",
                "noCommentText": "error",
                "noCompareNegZero": "error",
                "noControlCharactersInRegex": "error",
                "noDebugger": "error",
                "noDoubleEquals": "error",
                "noDuplicateCase": "error",
                "noDuplicateClassMembers": "error",
                "noDuplicateJsxProps": "error",
                "noDuplicateObjectKeys": "error",
                "noDuplicateParameters": "error",
                "noEmptyBlockStatements": "error",
                "noExplicitAny": "warn",
                "noExtraNonNullAssertion": "error",
                "noFallthroughSwitchClause": "error",
                "noFunctionAssign": "error",
                "noGlobalAssign": "error",
                "noImportAssign": "error",
                "noMisleadingCharacterClass": "error",
                "noMisleadingInstantiator": "error",
                "noPrototypeBuiltins": "error",
                "noRedeclare": "error",
                "noSelfCompare": "error",
                "noShadowRestrictedNames": "error",
                "noSparseArray": "error",
                "noUnsafeDeclarationMerging": "error",
                "noUnsafeNegation": "error",
                "useAwait": "error",
                "useDefaultSwitchClauseLast": "error"
            },
            "nursery": {
                "noSecrets": "error"
            }
        }
    },
    "javascript": {
        "formatter": {
            "enabled": true,
            "quoteStyle": "single",
            "jsxQuoteStyle": "single",
            "quoteProperties": "asNeeded",
            "trailingCommas": "es5",
            "semicolons": "always",
            "arrowParentheses": "always",
            "bracketSpacing": true,
            "bracketSameLine": false,
            "indentStyle": "space",
            "indentWidth": 4,
            "lineWidth": 120
        },
        "globals": ["React", "JSX"]
    },
    "json": {
        "formatter": {
            "enabled": true,
            "indentStyle": "space",
            "indentWidth": 4,
            "lineWidth": 120
        },
        "parser": {
            "allowComments": true,
            "allowTrailingCommas": true
        }
    },
    "css": {
        "formatter": {
            "enabled": true,
            "indentStyle": "space",
            "indentWidth": 4,
            "lineWidth": 120,
            "quoteStyle": "single"
        },
        "linter": {
            "enabled": true
        }
    },
    "overrides": [
        {
            "includes": ["**/*.test.{js,jsx,ts,tsx}", "**/*.spec.{js,jsx,ts,tsx}", "**/__tests__/**/*.{js,jsx,ts,tsx}"]
        },
        {
            "includes": [
                "**/*.config.{js,ts}",
                "**/*.config.*.{js,ts}",
                "vite.config.{js,ts}",
                "remix.config.{js,ts}",
                "tailwind.config.{js,ts}"
            ],
            "linter": {
                "rules": {
                    "style": {
                        "noDefaultExport": "off"
                    }
                }
            }
        },
        {
            "includes": ["app/routes/**/*.{js,jsx,ts,tsx}", "app/components/**/*.{js,jsx,ts,tsx}"],
            "linter": {
                "rules": {
                    "style": {
                        "noDefaultExport": "off"
                    }
                }
            }
        }
    ]
}
